//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Controls/IInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @IInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @IInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IInput"",
    ""maps"": [
        {
            ""name"": ""Racing"",
            ""id"": ""df5ca952-3316-4316-bf5a-709816177216"",
            ""actions"": [
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Value"",
                    ""id"": ""0b27c834-6316-414b-bf7f-eb1581f3f209"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Steer"",
                    ""type"": ""Value"",
                    ""id"": ""72fa2af1-f93d-49cf-af06-70351c892a03"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ItemA"",
                    ""type"": ""Button"",
                    ""id"": ""cf152a41-7477-48a6-9e17-cc33fef97a6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemB"",
                    ""type"": ""Button"",
                    ""id"": ""7aa53113-debb-442b-8bb7-abe7aa2cdbf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Boost"",
                    ""type"": ""Value"",
                    ""id"": ""fd5142fa-ddd2-4e73-b4c0-281850e23de9"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DriftLeft"",
                    ""type"": ""Button"",
                    ""id"": ""b9ef3808-d67b-4ab5-b5df-263234c28a7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DriftRight"",
                    ""type"": ""Button"",
                    ""id"": ""fd867876-1c32-4fff-8178-351845c55df2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bda6ecf3-27aa-485e-b4e6-c548469e3ffb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5b49adc-6015-44ee-a1e8-29284306589a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""05fb45e5-84d9-49e9-9917-04df4080cf18"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0512968f-e3cc-4bbd-8f12-2fcecfa64842"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0c6d3d55-e3cf-4b15-863f-60c2fea04a27"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2cfca5f0-0ace-40da-84ce-ae2a4e1cedf1"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c823be2f-6e3b-49ab-9b35-fab7b1a04d82"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2afa5343-5de7-4bb2-b3ba-d3cf6fcd53ae"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""Boost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4675a66-a1f1-45d4-adb6-2db75e3e44fd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""DriftLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1fe5e44-9e34-4bbf-9e7c-a9c1a8d079f1"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""DriftLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a249c858-c1c1-47d4-a4e3-1651f29cbe36"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""DriftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9a72249-de21-47b8-aca1-533b6d13cfef"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""DriftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a85e1bb-3061-498e-b632-004dd5cffe73"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""ItemA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ff139d8-4f36-4a5d-8e16-ed6686fa7bb5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""ItemB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""5ab1e670-4a63-4c61-9de1-a108ab658db2"",
            ""actions"": [
                {
                    ""name"": ""UIPoint"",
                    ""type"": ""Value"",
                    ""id"": ""e8241cd5-b899-4489-b2c3-be44056c6304"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UINav"",
                    ""type"": ""Value"",
                    ""id"": ""c759ee33-309b-40a0-aa4f-91cdb4fe0b54"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UISelect"",
                    ""type"": ""Button"",
                    ""id"": ""0a57be10-2f01-45b8-be4e-d16ecab6bc4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIPointSelect"",
                    ""type"": ""Button"",
                    ""id"": ""bd8b08bd-72a1-4888-93ea-dc378ae4dc3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIBack"",
                    ""type"": ""Button"",
                    ""id"": ""972b7f2b-3d4d-4d41-b2fb-401b3f1200af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltSelect"",
                    ""type"": ""Button"",
                    ""id"": ""a0075679-3e86-426d-9155-e86922797073"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b0597da4-989e-40ed-b191-c11a1571b7c3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UINav"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f5028da9-5b2e-457b-a745-58e9314b6bd3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UINav"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6f999307-76da-4603-a14d-5b4aaf4ce161"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UINav"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""831625b5-f25c-4390-b7f4-cb4abbd397aa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UINav"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""832bf00c-a991-49ea-8c1f-3ad9df6527f0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UINav"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d6f9b694-da92-4ac5-a47d-669e99d6fbe4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""UINav"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0139155-ac73-4f65-9bb6-c8d8c2c80854"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""UINav"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""688f03d2-c1f7-42cd-ada0-846029b406ff"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UISelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f76e365-24da-44f6-b128-628b7da03851"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Gamepad"",
                    ""action"": ""UISelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a099061-2b0f-4de3-b39f-3b9fa01d151b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UIPoint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""795c6adb-ebd6-4f52-967b-967e636913c8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard;MouseAndKeyboard"",
                    ""action"": ""UIPointSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6eb42df6-2d62-4282-8015-879a3dc68c0d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""UIBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05f16a9f-073b-485d-8521-b79688543e93"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""AltSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""MouseAndKeyboard"",
            ""bindingGroup"": ""MouseAndKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Racing
        m_Racing = asset.FindActionMap("Racing", throwIfNotFound: true);
        m_Racing_Accelerate = m_Racing.FindAction("Accelerate", throwIfNotFound: true);
        m_Racing_Steer = m_Racing.FindAction("Steer", throwIfNotFound: true);
        m_Racing_ItemA = m_Racing.FindAction("ItemA", throwIfNotFound: true);
        m_Racing_ItemB = m_Racing.FindAction("ItemB", throwIfNotFound: true);
        m_Racing_Boost = m_Racing.FindAction("Boost", throwIfNotFound: true);
        m_Racing_DriftLeft = m_Racing.FindAction("DriftLeft", throwIfNotFound: true);
        m_Racing_DriftRight = m_Racing.FindAction("DriftRight", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_UIPoint = m_Menu.FindAction("UIPoint", throwIfNotFound: true);
        m_Menu_UINav = m_Menu.FindAction("UINav", throwIfNotFound: true);
        m_Menu_UISelect = m_Menu.FindAction("UISelect", throwIfNotFound: true);
        m_Menu_UIPointSelect = m_Menu.FindAction("UIPointSelect", throwIfNotFound: true);
        m_Menu_UIBack = m_Menu.FindAction("UIBack", throwIfNotFound: true);
        m_Menu_AltSelect = m_Menu.FindAction("AltSelect", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Racing
    private readonly InputActionMap m_Racing;
    private List<IRacingActions> m_RacingActionsCallbackInterfaces = new List<IRacingActions>();
    private readonly InputAction m_Racing_Accelerate;
    private readonly InputAction m_Racing_Steer;
    private readonly InputAction m_Racing_ItemA;
    private readonly InputAction m_Racing_ItemB;
    private readonly InputAction m_Racing_Boost;
    private readonly InputAction m_Racing_DriftLeft;
    private readonly InputAction m_Racing_DriftRight;
    public struct RacingActions
    {
        private @IInput m_Wrapper;
        public RacingActions(@IInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accelerate => m_Wrapper.m_Racing_Accelerate;
        public InputAction @Steer => m_Wrapper.m_Racing_Steer;
        public InputAction @ItemA => m_Wrapper.m_Racing_ItemA;
        public InputAction @ItemB => m_Wrapper.m_Racing_ItemB;
        public InputAction @Boost => m_Wrapper.m_Racing_Boost;
        public InputAction @DriftLeft => m_Wrapper.m_Racing_DriftLeft;
        public InputAction @DriftRight => m_Wrapper.m_Racing_DriftRight;
        public InputActionMap Get() { return m_Wrapper.m_Racing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RacingActions set) { return set.Get(); }
        public void AddCallbacks(IRacingActions instance)
        {
            if (instance == null || m_Wrapper.m_RacingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RacingActionsCallbackInterfaces.Add(instance);
            @Accelerate.started += instance.OnAccelerate;
            @Accelerate.performed += instance.OnAccelerate;
            @Accelerate.canceled += instance.OnAccelerate;
            @Steer.started += instance.OnSteer;
            @Steer.performed += instance.OnSteer;
            @Steer.canceled += instance.OnSteer;
            @ItemA.started += instance.OnItemA;
            @ItemA.performed += instance.OnItemA;
            @ItemA.canceled += instance.OnItemA;
            @ItemB.started += instance.OnItemB;
            @ItemB.performed += instance.OnItemB;
            @ItemB.canceled += instance.OnItemB;
            @Boost.started += instance.OnBoost;
            @Boost.performed += instance.OnBoost;
            @Boost.canceled += instance.OnBoost;
            @DriftLeft.started += instance.OnDriftLeft;
            @DriftLeft.performed += instance.OnDriftLeft;
            @DriftLeft.canceled += instance.OnDriftLeft;
            @DriftRight.started += instance.OnDriftRight;
            @DriftRight.performed += instance.OnDriftRight;
            @DriftRight.canceled += instance.OnDriftRight;
        }

        private void UnregisterCallbacks(IRacingActions instance)
        {
            @Accelerate.started -= instance.OnAccelerate;
            @Accelerate.performed -= instance.OnAccelerate;
            @Accelerate.canceled -= instance.OnAccelerate;
            @Steer.started -= instance.OnSteer;
            @Steer.performed -= instance.OnSteer;
            @Steer.canceled -= instance.OnSteer;
            @ItemA.started -= instance.OnItemA;
            @ItemA.performed -= instance.OnItemA;
            @ItemA.canceled -= instance.OnItemA;
            @ItemB.started -= instance.OnItemB;
            @ItemB.performed -= instance.OnItemB;
            @ItemB.canceled -= instance.OnItemB;
            @Boost.started -= instance.OnBoost;
            @Boost.performed -= instance.OnBoost;
            @Boost.canceled -= instance.OnBoost;
            @DriftLeft.started -= instance.OnDriftLeft;
            @DriftLeft.performed -= instance.OnDriftLeft;
            @DriftLeft.canceled -= instance.OnDriftLeft;
            @DriftRight.started -= instance.OnDriftRight;
            @DriftRight.performed -= instance.OnDriftRight;
            @DriftRight.canceled -= instance.OnDriftRight;
        }

        public void RemoveCallbacks(IRacingActions instance)
        {
            if (m_Wrapper.m_RacingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRacingActions instance)
        {
            foreach (var item in m_Wrapper.m_RacingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RacingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RacingActions @Racing => new RacingActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_UIPoint;
    private readonly InputAction m_Menu_UINav;
    private readonly InputAction m_Menu_UISelect;
    private readonly InputAction m_Menu_UIPointSelect;
    private readonly InputAction m_Menu_UIBack;
    private readonly InputAction m_Menu_AltSelect;
    public struct MenuActions
    {
        private @IInput m_Wrapper;
        public MenuActions(@IInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @UIPoint => m_Wrapper.m_Menu_UIPoint;
        public InputAction @UINav => m_Wrapper.m_Menu_UINav;
        public InputAction @UISelect => m_Wrapper.m_Menu_UISelect;
        public InputAction @UIPointSelect => m_Wrapper.m_Menu_UIPointSelect;
        public InputAction @UIBack => m_Wrapper.m_Menu_UIBack;
        public InputAction @AltSelect => m_Wrapper.m_Menu_AltSelect;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @UIPoint.started += instance.OnUIPoint;
            @UIPoint.performed += instance.OnUIPoint;
            @UIPoint.canceled += instance.OnUIPoint;
            @UINav.started += instance.OnUINav;
            @UINav.performed += instance.OnUINav;
            @UINav.canceled += instance.OnUINav;
            @UISelect.started += instance.OnUISelect;
            @UISelect.performed += instance.OnUISelect;
            @UISelect.canceled += instance.OnUISelect;
            @UIPointSelect.started += instance.OnUIPointSelect;
            @UIPointSelect.performed += instance.OnUIPointSelect;
            @UIPointSelect.canceled += instance.OnUIPointSelect;
            @UIBack.started += instance.OnUIBack;
            @UIBack.performed += instance.OnUIBack;
            @UIBack.canceled += instance.OnUIBack;
            @AltSelect.started += instance.OnAltSelect;
            @AltSelect.performed += instance.OnAltSelect;
            @AltSelect.canceled += instance.OnAltSelect;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @UIPoint.started -= instance.OnUIPoint;
            @UIPoint.performed -= instance.OnUIPoint;
            @UIPoint.canceled -= instance.OnUIPoint;
            @UINav.started -= instance.OnUINav;
            @UINav.performed -= instance.OnUINav;
            @UINav.canceled -= instance.OnUINav;
            @UISelect.started -= instance.OnUISelect;
            @UISelect.performed -= instance.OnUISelect;
            @UISelect.canceled -= instance.OnUISelect;
            @UIPointSelect.started -= instance.OnUIPointSelect;
            @UIPointSelect.performed -= instance.OnUIPointSelect;
            @UIPointSelect.canceled -= instance.OnUIPointSelect;
            @UIBack.started -= instance.OnUIBack;
            @UIBack.performed -= instance.OnUIBack;
            @UIBack.canceled -= instance.OnUIBack;
            @AltSelect.started -= instance.OnAltSelect;
            @AltSelect.performed -= instance.OnAltSelect;
            @AltSelect.canceled -= instance.OnAltSelect;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_MouseAndKeyboardSchemeIndex = -1;
    public InputControlScheme MouseAndKeyboardScheme
    {
        get
        {
            if (m_MouseAndKeyboardSchemeIndex == -1) m_MouseAndKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseAndKeyboard");
            return asset.controlSchemes[m_MouseAndKeyboardSchemeIndex];
        }
    }
    public interface IRacingActions
    {
        void OnAccelerate(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnItemA(InputAction.CallbackContext context);
        void OnItemB(InputAction.CallbackContext context);
        void OnBoost(InputAction.CallbackContext context);
        void OnDriftLeft(InputAction.CallbackContext context);
        void OnDriftRight(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnUIPoint(InputAction.CallbackContext context);
        void OnUINav(InputAction.CallbackContext context);
        void OnUISelect(InputAction.CallbackContext context);
        void OnUIPointSelect(InputAction.CallbackContext context);
        void OnUIBack(InputAction.CallbackContext context);
        void OnAltSelect(InputAction.CallbackContext context);
    }
}
